package day01;

public class Ex07 {

	public static void main(String[] args) {
		byte b1 = 127; // byte의 최대값=127
		byte b2 = (byte) (b1 + 1);
		System.out.println("b2 :" + b2);

		// 결과가 왜 -128로 나타날까?

		// 10진수 127에서 128로 추가될 때 자리값이 올라감
		// 2진수 0111111 => 1000000 이라 <- -128
		// byte 공간 안에서는 맨 앞의 1을 sign 부호로 봄
		// B1에 먼저 byte 타입이 표현할 수 있는 최대ㅅ값 이하의 값을우선 할당한 후 1을 증가시킬 수 있음.
		// 이 경우 해당 타입 범위 안에서 값을 표현하기 위해 > 최대값 + 1을 증가시키면 최저값으로 표현 됨.
		// 8비트라는 사이즈 안에서.
		// 상대적인 표현으로, //byte 뿐만 아니라 다른 자료형에서도 같은 과정을 거침. 형변환은 필요함.

		// byte b3 = 128;
		short b3 = 128;

		// byte 타입이 표현할 수 있는 최댓값을 넘었기 때문에 BYTE에서는 B3을 표현할 수 없음.
		// 더 큰 타입인 SHORT으로 올라감.

		int num1 = 2147483647;
		// long num2 = 2147483648L;
		// long 타입은 저장 시 접미사 붙여야 함

		int num2 = (int) (num1 + 1);
		System.out.println(num2);

		// 같은 방식으로 최댓값 +1이 최저값이 된 것. 메모리 크기의 한계 때문에 일어나는 일.
	}

}
